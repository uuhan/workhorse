[package]
name = "horsed"
version = "0.2.6"
edition = "2021"

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(tokio_unstable)'] }

[dependencies]
clap.workspace = true
futures.workspace = true
tokio.workspace = true
stable.workspace = true
migration.workspace = true
russh.workspace = true
async-trait.workspace = true
tracing.workspace = true
tracing-subscriber.workspace = true
once_cell.workspace = true
anyhow.workspace = true
colored.workspace = true
serde.workspace = true
serde_json.workspace = true
cargo-options.workspace = true
tracing-appender.workspace = true
paste.workspace = true
bincode.workspace = true
tar.workspace = true
clean-path.workspace = true
flate2.workspace = true
tracing-opentelemetry = { workspace = true, optional = true }
opentelemetry-semantic-conventions = { workspace = true, features = [
  "semconv_experimental",
], optional = true }
opentelemetry = { workspace = true, optional = true }
opentelemetry-stdout = { workspace = true, optional = true }
opentelemetry-otlp = { workspace = true, features = [
  "grpc-tonic",
], optional = true }
opentelemetry_sdk = { workspace = true, features = [
  "rt-tokio",
  "url",
], optional = true }

anstyle = "1.0.2"
base64 = "0.22.1"
displaydoc = "0.2.5"
interprocess = { version = "2.2.2", features = ["tokio"] }
rand_core = "0.6.4"
ratatui = "0.29.0"
shellwords = "1.1.0"
sea-orm = { version = "1.1.3", features = [
  "sqlx-sqlite",
  "runtime-tokio-rustls",
  "macros",
] }
thiserror = "2.0.9"
rstest.workspace = true

[dev-dependencies]
async-std.workspace = true

[target.'cfg(tokio_unstable)'.dependencies]
console-subscriber = { version = "0.4", features = ["parking_lot"] }

[features]
default = []
opentelemetry = [
  "dep:opentelemetry",
  "dep:opentelemetry_sdk",
  "dep:opentelemetry-otlp",
  "dep:opentelemetry-stdout",
  "dep:opentelemetry-semantic-conventions",
  "dep:tracing-opentelemetry",
]
